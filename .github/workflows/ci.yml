# Disabled - replaced with simplified workflow
name: CI/CD Pipeline (Disabled)

on:
  workflow_dispatch:  # Only run manually

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_arabic_voc
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio
    
    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_arabic_voc" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
    
    - name: Run Arabic processing tests
      run: |
        pytest tests/test_arabic_processing.py -v
    
    - name: Run security tests
      run: |
        pytest tests/test_security.py -v
    
    - name: Run performance tests
      run: |
        pytest tests/test_performance.py -v --tb=short
    
    - name: Generate coverage report
      run: |
        pytest --cov=utils --cov=api --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt

  build:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t arabic-voc-platform .
    
    - name: Test Docker image
      run: |
        docker run --rm -d -p 8000:8000 --name test-app arabic-voc-platform
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        docker stop test-app
