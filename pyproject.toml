[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "arabic-voc-platform"
version = "1.0.0"
description = "Arabic Voice of Customer Platform with AI-powered sentiment analysis"
authors = [
    {name = "Arabic VoC Team", email = "dev@arabicvoc.com"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["arabic", "sentiment-analysis", "customer-feedback", "ai", "nlp"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Natural Language :: Arabic",
]
requires-python = ">=3.11"
dependencies = [
    "flask>=2.3.0",
    "flask-sqlalchemy>=3.0.0",
    "psycopg2-binary>=2.9.0",
    "openai>=1.0.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langgraph>=0.1.0",
    "arabic-reshaper>=3.0.0",
    "python-bidi>=0.4.0",
    "gunicorn>=20.1.0",
    "werkzeug>=2.3.0",
    "jinja2>=3.1.0",
    "pydantic>=2.0.0",
    "asyncio>=3.4.3",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]
monitoring = [
    "prometheus-client>=0.16.0",
    "grafana-api>=1.0.0",
    "psutil>=5.9.0",
]
testing = [
    "locust>=2.15.0",
    "memory-profiler>=0.60.0",
    "faker>=18.0.0",
]

[project.urls]
Homepage = "https://github.com/your-org/arabic-voc-platform"
Documentation = "https://github.com/your-org/arabic-voc-platform/tree/main/documentation"
Repository = "https://github.com/your-org/arabic-voc-platform.git"
"Bug Tracker" = "https://github.com/your-org/arabic-voc-platform/issues"

[project.scripts]
arabic-voc = "app.main:main"
arabic-voc-health = "deployment.monitoring.health_check:main"
arabic-voc-benchmark = "tools.performance_analysis.benchmark_agents:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*", "deployment*", "tools*"]
exclude = ["tests*", "testing*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "deployment", "tools"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["testing"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
    "security: marks tests as security tests",
    "arabic: marks tests as Arabic language specific",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/testing/*",
    "*/migrations/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "testing"]
skips = ["B101", "B601"]