version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/arabicvoc
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_URL=redis://redis:6379
    volumes:
      - app_logs:/var/log/arabic-voc
    depends_on:
      - db
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=arabicvoc
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/sql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/nginx/sites:/etc/nginx/conf.d
      - ./static:/var/www/static
      - ./deployment/ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped

  monitoring:
    build:
      context: .
      dockerfile: Dockerfile.monitoring
    ports:
      - "3000:3000"
    environment:
      - APP_URL=http://app:5000
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/arabicvoc
    volumes:
      - monitoring_data:/var/lib/grafana
    depends_on:
      - app
      - db
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  app_logs:
  monitoring_data:

networks:
  default:
    driver: bridge